{
	"info": {
		"_postman_id": "9209ff0c-84b0-42de-b589-b8032bffdbd4",
		"name": "PET STORE",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "29118946"
	},
	"item": [
		{
			"name": "pets",
			"item": [
				{
					"name": "GET a pets with all statuses",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}pet/findByStatus?status=available&status=pending&status=sold",
							"host": [
								"{{baseURL}}pet"
							],
							"path": [
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "available"
								},
								{
									"key": "status",
									"value": "pending"
								},
								{
									"key": "status",
									"value": "sold"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET a pet with given id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}pet/{{toGetPetId}}",
							"host": [
								"{{baseURL}}pet"
							],
							"path": [
								"{{toGetPetId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Adding a new pet to the store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"let newPetId = jsonData.id;",
									"",
									"pm.collectionVariables.set(\"newPetId\",newPetId);",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"id\": \"{{$timestamp}}\",\n  \"category\": {\n    \"id\": 0,\n    \"name\": \"{{$randomFirstName}}\"\n  },\n  \"name\": \"{{$randomFirstName}}\",\n  \"photoUrls\": [\n    \"https://dogtime.com/wp-content/uploads/sites/12/2023/08/GettyImages-865592368-e1692904739165.jpg\"\n  ],\n  \"tags\": [\n    {\n      \"id\": 0,\n      \"name\": \"string\"\n    }\n  ],\n  \"status\": \"available\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}pet",
							"host": [
								"{{baseURL}}pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Updating a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Response includes the required fields - id, name, photoUrls, and tags\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.include.all.keys('id', 'name', 'photoUrls', 'tags');",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": \"{{toGetPetId}}\",\n    \"name\": \"{{$randomUserName}}\",\n    \"photoUrls\": [\"https://dogtime.com/wp-content/uploads/sites/12/2023/08/GettyImages-865592368-e1692904739165.jpg\"]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}pet",
							"host": [
								"{{baseURL}}pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"protocolProfileBehavior": {
						"disabledSystemHeaders": {}
					},
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text",
								"disabled": true
							}
						],
						"url": {
							"raw": "{{baseURL}}pet/{{newPetId}}",
							"host": [
								"{{baseURL}}pet"
							],
							"path": [
								"{{newPetId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "pet orders",
			"item": [
				{
					"name": "Placing an order for a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let jsonData = pm.response.json();",
									"let petOrderId = jsonData.id;",
									"",
									"pm.collectionVariables.set(\"petOrderId\",petOrderId);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"id\": {{idToGetOrder}},\n    \"petId\": 2,\n    \"quantity\": 1,\n    \"shipDate\": \"2024-07-26T13:12:46.914Z\",\n    \"status\": \"approved\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}store/order",
							"host": [
								"{{baseURL}}store"
							],
							"path": [
								"order"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an order with given id",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}store/order/{{idToGetOrder}}",
							"host": [
								"{{baseURL}}store"
							],
							"path": [
								"order",
								"{{idToGetOrder}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get an order with info about status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"let statusOrder = pm.response.json();",
									"pm.test(\"Body matches string\", function () {",
									"    pm.expect(pm.response.text()).to.include(\"approved\");",
									"});",
									"",
									"",
									"pm.test(\"Response has the required fields - id, petId, quantity, shipDate, status, and complete\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData).to.have.property('id');",
									"    pm.expect(responseData).to.have.property('petId');",
									"    pm.expect(responseData).to.have.property('quantity');",
									"    pm.expect(responseData).to.have.property('shipDate');",
									"    pm.expect(responseData).to.have.property('status');",
									"    pm.expect(responseData).to.have.property('complete');",
									"});",
									"",
									"pm.test(\"Status is a non-empty string\", function () {",
									"    const responseData = pm.response.json();",
									"",
									"    pm.expect(responseData).to.be.an('object');",
									"    pm.expect(responseData.status).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Status should not be empty\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}store/order/{{idToGetOrder}}",
							"host": [
								"{{baseURL}}store"
							],
							"path": [
								"order",
								"{{idToGetOrder}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting an order for a pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}store/order/{{petOrderId}}",
							"host": [
								"{{baseURL}}store"
							],
							"path": [
								"order",
								"{{petOrderId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "user",
			"item": [
				{
					"name": "Creating user account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n   \n    \"username\": \"{{username}}\",\n    \"firstName\": \"{{randomFirstName}}\",\n    \"lastName\": \"{{randomLastName}}\",\n    \"email\": \"{{randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"phone\": \"{{randomPhoneNumber}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}user",
							"host": [
								"{{baseURL}}user"
							]
						}
					},
					"response": []
				},
				{
					"name": "Logging a user to the store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Message is a non-empty string\", function () {",
									"    const responseData = pm.response.text();",
									"",
									"    pm.expect(responseData).to.be.a('string').and.to.have.lengthOf.at.least(1, \"Message should not be empty\");",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}user/login?username={{username}}&password={{password}}",
							"host": [
								"{{baseURL}}user"
							],
							"path": [
								"login"
							],
							"query": [
								{
									"key": "username",
									"value": "{{username}}"
								},
								{
									"key": "password",
									"value": "{{password}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get a user data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}user/{{username}}",
							"host": [
								"{{baseURL}}user"
							],
							"path": [
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET user log out",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{baseURL}}user/logout",
							"host": [
								"{{baseURL}}user"
							],
							"path": [
								"logout"
							]
						}
					},
					"response": []
				},
				{
					"name": "PUT updating user data",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"",
									"pm.test(\"Response time is less than 200ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(200);",
									"});",
									"",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"{{username}}\",\n    \"firstName\": \"{{randomFirstName}}\",\n    \"lastName\": \"{{randomLastName}}\",\n    \"email\": \"22{{randomEmail}}\",\n    \"password\": \"{{password}}\",\n    \"phone\": \"{{randomPhoneNumber}}\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{baseURL}}user/{{username}}",
							"host": [
								"{{baseURL}}user"
							],
							"path": [
								"{{username}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Deleting user account from the store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{baseURL}}user/{{username}}",
							"host": [
								"{{baseURL}}user"
							],
							"path": [
								"{{username}}"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "newPetId",
			"value": "1720975724",
			"type": "string"
		},
		{
			"key": "idToGetOrder",
			"value": "10"
		},
		{
			"key": "toGetPetId",
			"value": "2"
		},
		{
			"key": "petOrderId",
			"value": "24",
			"type": "string"
		},
		{
			"key": "username",
			"value": "Tom",
			"type": "string"
		},
		{
			"key": "password",
			"value": "nsjhs6363",
			"type": "string"
		},
		{
			"key": "usernameToDelete",
			"value": "Mark",
			"type": "string"
		}
	]
}